# -*- mode: ruby -*-

def str_set_bp(str_)
  aset(str_, 0,  98); # b
  aset(str_, 1, 112); # p
  aset(str_, 2,   0);
end

def str_set_call(str_)
  aset(str_, 0,  99); # c
  aset(str_, 1,  97); # a
  aset(str_, 2, 108); # l
  aset(str_, 3, 108); # l
  aset(str_, 4,   0);
end

def str_eq_call(str_)
  var [5]pattern;
  str_set_call(&pattern);
  return str_eq(str_, &pattern);
end

def str_set_func(str_)
  aset(str_, 0, 102); # f
  aset(str_, 1, 117); # u
  aset(str_, 2, 110); # n
  aset(str_, 3,  99); # c
  aset(str_, 4,   0);
end

def str_eq_func(str_)
  var [5]pattern;
  str_set_func(&pattern);
  return str_eq(str_, &pattern);
end

def str_set_funcall(str_)
  aset(str_, 0, 102); # f
  aset(str_, 1, 117); # u
  aset(str_, 2, 110); # n
  aset(str_, 3,  99); # c
  aset(str_, 4,  97); # a
  aset(str_, 5, 108); # l
  aset(str_, 6, 108); # l
  aset(str_, 7,   0);
end

def str_set_reg_a(dest_)
  aset(dest_, 0, 114); # r
  aset(dest_, 1, 101); # e
  aset(dest_, 2, 103); # g
  aset(dest_, 3,  95); # _
  aset(dest_, 4,  97); # a
  aset(dest_, 5,   0);
end

def str_set_reg_b(dest_)
  aset(dest_, 0, 114); # r
  aset(dest_, 1, 101); # e
  aset(dest_, 2, 103); # g
  aset(dest_, 3,  95); # _
  aset(dest_, 4,  98); # b
  aset(dest_, 5,   0);
end

def str_set_return(dest_)
  aset(dest_, 0, 114); # r
  aset(dest_, 1, 101); # e
  aset(dest_, 2, 116); # t
  aset(dest_, 3, 117); # u
  aset(dest_, 4, 114); # r
  aset(dest_, 5, 110); # n
  aset(dest_, 6,   0);
end

def str_eq_return(str_)
  var [7]pattern;
  str_set_return(&pattern);
  return str_eq(str_, &pattern);
end

def str_set_sp(str_)
  aset(str_, 0, 115); # s
  aset(str_, 1, 112); # p
  aset(str_, 2,   0);
end

def str_set_var(dest_)
  aset(dest_, 0, 118); # v
  aset(dest_, 1,  97); # a
  aset(dest_, 2, 114); # r
  aset(dest_, 3,   0);
end

def str_eq_var(str_)
  var [4]pattern;
  str_set_var(&pattern);
  return str_eq(str_, &pattern);
end

def str_set_var_array(dest_)
  aset(dest_, 0, 118); # v
  aset(dest_, 1,  97); # a
  aset(dest_, 2, 114); # r
  aset(dest_, 3,  95); # _
  aset(dest_, 4,  97); # a
  aset(dest_, 5, 114); # r
  aset(dest_, 6, 114); # r
  aset(dest_, 7,  97); # a
  aset(dest_, 8, 121); # y
  aset(dest_, 9,   0);
end

def str_eq_var_array(str_)
  var [10]pattern;
  str_set_var_array(&pattern);
  return str_eq(str_, &pattern);
end

def str_set_while(str_)
  aset(str_, 0, 119); # w
  aset(str_, 1, 104); # h
  aset(str_, 2, 105); # i
  aset(str_, 3, 108); # l
  aset(str_, 4, 101); # e
  aset(str_, 5,   0);
end

def str_eq_while(str_)
  var [6]pattern;
  str_set_while(&pattern);
  return str_eq(str_, &pattern);
end
