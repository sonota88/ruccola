#!/bin/bash

set -o errexit
set -o nounset

print_this_dir() {
  (
    cd "$(dirname $0)"
    pwd
  )
}

get_envvar() {
  local name="$1"; shift
  local default_value="$1"; shift

  if (env | grep "^${name}=" > /dev/null); then
    env | grep "^${name}=" | sed -e "s/^${name}=//"
  else
    echo $default_value
  fi
}

is_fastvm() {
  local val=$(get_envvar FASTVM 0)
  if [ "$val" = "1" ]; then
    return 0
  else
    return 1
  fi
}

print_vm_cmd() {
  if [ "$(get_envvar FASTVM 0)" = "1" ]; then
    echo "${__DIR__}/../fastvm/exe/rclvm"
  else
    echo "${__DIR__}/../rclvm"
  fi
}

run() {
  local name="$1"; shift
  local infile="$1"; shift
  local outfile="$1"; shift

  echo "-->> ${name}" >&2

  # time (
  #   printf "${name} ... "

  STDIN=$infile DEBUG=0 VERBOSE=0 \
    $RCLVM ${__DIR__}/exe/${name}.exe.txt > $outfile

  #   printf "done\n"
  #   printf "\n"
  # ) >&2
}

__DIR__="$(print_this_dir)"

PROJECT_DIR="$(
  cd "${__DIR__}/.."
  pwd
)"
TMP_DIR=${__DIR__}/tmp/
RCLVM="$(print_vm_cmd)"
PRINT_ASM=$(get_envvar "PRINT_ASM" 0)

mkdir -p ${TMP_DIR}

file="$1"
bname=pricc-pric

src_temp=${TMP_DIR}/${bname}.pric.rb
tokensfile=${TMP_DIR}/${bname}.tokens.txt
treefile=${TMP_DIR}/${bname}.vgt.json
asmfile=${TMP_DIR}/${bname}.vga.txt

(
  cd $__DIR__
  rake build-all
)

# build fast vm
if (is_fastvm); then
  (
    cd ${PROJECT_DIR}/fastvm
    rake build
  )
fi

ruby ${__DIR__}/../check.rb gvar-width $file
ruby ${__DIR__}/../preproc.rb $file > $src_temp

run "lexer" $src_temp $tokensfile

run "parser" $tokensfile $treefile

ruby ${__DIR__}/../check.rb fn-sig $treefile
run "codegen" $treefile $asmfile

if [ $PRINT_ASM -eq 1 ]; then
  cat $asmfile
else
  ruby ${__DIR__}/../vgasm.rb $asmfile
fi
